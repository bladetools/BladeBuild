/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/custom_plugins.html
 */

buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.jfrog.bintray" version "1.8.4"
    id 'maven-publish'
    id 'java-gradle-plugin'
}

repositories {
    jcenter()
}

dependencies {
    implementation 'org.bladetools:bladedx:1.0'
    implementation 'com.github.javaparser:javaparser-core:3.14.14'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9.3'
    testImplementation 'junit:junit:4.12'
}

gradlePlugin {
    // Define the plugin
    plugins {
        bladebuild {
            id = 'blade-build'
            implementationClass = 'org.blade.build.BladeBuildPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

test {
    testLogging {
         events "failed"
         exceptionFormat "full"
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'org.bladetools'
            artifactId = 'bladebuild'
            version = '1.0'
            artifact sourcesJar
            from components.java
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['mavenJava']
    pkg {
        repo = 'bladetools'
        name = 'bladebuild'
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/bladetools/BladeBuild.git'
        labels = ['blade', 'bladebuild']
        publicDownloadNumbers = true
        version {
            name = '1.0'
            desc = 'Blade Gradle Plugin'
        }
    }
}
